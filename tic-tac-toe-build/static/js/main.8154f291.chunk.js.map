{"version":3,"sources":["components/Square.jsx","components/Board.jsx","components/Game.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Square","value","onClick","className","Board","squares","renderSquare","i","calculateWinner","lines","length","a","b","c","Game","status","useState","Array","fill","history","setHistory","xIsNext","setXIsNext","stepNumber","setStepNumber","board","winner","moves","map","_step","move","desc","jumpTo","step","slice","tempHistory","tempSquares","handleClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8154f291.chunk.js","sourcesContent":["const Square = ({value, onClick}) => {\r\n    return (\r\n        <button \r\n            className=\"square\" \r\n            onClick={onClick}\r\n        >\r\n            {value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","// import {useState} from 'react'\r\nimport Square from './Square'\r\n\r\nconst Board = ({squares, onClick}) => {\r\n    // const [squares, setSquares] = useState(Array(9).fill(null));\r\n    // const [xIsNext, setXIsNext] = useState(true)\r\n    \r\n    const renderSquare = (i) => {\r\n        return <Square value={squares[i]} onClick={() => onClick(i)}/>\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {/* <div className=\"status\">{status}</div> */}\r\n            <div className=\"board-row\">\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Board\r\n","import { useState } from 'react';\r\nimport Board from './Board';\r\n\r\nconst Game = () => {\r\n\tconst [history, setHistory] = useState([{ squares: Array(9).fill(null) }]);\r\n\tconst [xIsNext, setXIsNext] = useState(true);\r\n\tconst [stepNumber, setStepNumber] = useState(0);\r\n\r\n\tconst handleClick = (i) => {\r\n\t\tconst tempHistory = history.slice(0, stepNumber + 1);\r\n\t\tconst currentBoard = tempHistory[tempHistory.length - 1];\r\n\t\tconst tempSquares = currentBoard.squares.slice();\r\n\t\tif (calculateWinner(tempSquares) || tempSquares[i]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttempSquares[i] = xIsNext ? 'X' : 'O';\r\n\t\tsetHistory([...tempHistory, { squares: tempSquares }]);\r\n\t\tsetXIsNext(!xIsNext);\r\n\t\tsetStepNumber(tempHistory.length);\r\n\t};\r\n\r\n\tconst board = history[stepNumber];\r\n\tconst winner = calculateWinner(board.squares);\r\n\r\n\tlet status;\r\n\tif (winner) status = 'Winner: ' + winner;\r\n\telse status = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n\r\n\tconst moves = history.map((_step, move) => {\r\n\t\tconst desc = move ? 'Go to move # ' + move : 'Go to game Start';\r\n\t\treturn (\r\n\t\t\t<li key={move}>\r\n\t\t\t\t<button onClick={() => jumpTo(move)}>{desc}</button>\r\n\t\t\t</li>\r\n\t\t);\r\n\t});\r\n\r\n\tconst jumpTo = (step) => {\r\n\t\tsetStepNumber(step);\r\n\t\tsetXIsNext(step % 2 === 0);\r\n\t\tsetHistory(history.slice(0, step + 1));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='game'>\r\n\t\t\t<div className='game-board'>\r\n\t\t\t\t<Board\r\n\t\t\t\t\tsquares={board.squares}\r\n\t\t\t\t\tonClick={(i) => handleClick(i)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='game-info'>\r\n\t\t\t\t<div>{status}</div>\r\n\t\t\t\t<ol>{moves}</ol>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst calculateWinner = (squares) => {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (\r\n\t\t\tsquares[a] &&\r\n\t\t\tsquares[a] === squares[b] &&\r\n\t\t\tsquares[a] === squares[c]\r\n\t\t) {\r\n\t\t\treturn squares[a];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport default Game;\r\n","import Game from \"./components/Game\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Game/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}